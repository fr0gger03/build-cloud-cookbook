name: Build and Push
description: Build and push Docker images
inputs:
  platforms:
    description: "Platforms to build"
    required: true
    default: "linux/amd64,linux/arm64"
  builder_type:
    description: "Builder type"
    required: true
    default: "cloud"
  cloud_builder:
    description: "The cloud builder endpoint"
    required: false
  docker_username:
    description: "Docker Hub username"
    required: true
  docker_password:
    description: "Docker Hub password"
    required: true
  docker_hub_account:
    description: "Docker Hub account to push the image to"
    required: true
  no-cache:
    description: "Disable cache during build"
    required: false
    default: "false"
runs:
  using: "composite"
  steps:
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.docker_username }}
          password: ${{ inputs.docker_password }}

      - name: Set up QEMU
        if: ${{ inputs.builder_type == 'local' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx (local)
        if: ${{ inputs.builder_type == 'local' }}
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Buildx (cloud)
        if: ${{ inputs.builder_type != 'local' }}
        uses: docker/setup-buildx-action@v3
        with:
            version: lab:latest
            driver: cloud
            endpoint: ${{ inputs.cloud_builder }}

      - name: Build and push (local)
        if: ${{ inputs.builder_type == 'local' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ inputs.platforms || 'linux/amd64,linux/arm64' }}
          push: true
          tags: ${{ inputs.docker_hub_account }}/dbc-demo:latest-local
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push (cloud)
        if: ${{ inputs.builder_type != 'local' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ inputs.platforms || 'linux/amd64,linux/arm64' }}
          push: true
          tags: ${{ inputs.docker_hub_account }}/dbc-demo:latest-cloud
          no-cache: ${{ inputs.no-cache }}
